/*
 * Copyright (C) 2017-2018 Kai-Chung Yan (殷啟聰)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply from: 'gradle/dependencies.gradle'

ext {
  checkerFrameworkProcessors = [
      'org.checkerframework.checker.interning.InterningChecker',
      'org.checkerframework.checker.nullness.NullnessChecker',
      'org.checkerframework.checker.optional.OptionalChecker'
  ]
  checkerFrameworkSkipUses = [
      '^io\\.netty\\.',
      '^io\\.reactivex\\.',
      '^java\\.net\\.URI',
      '^org\\.apache\\.commons\\.lang3\\.'
  ]
}

buildscript {
  repositories {
    jcenter()
    maven { url 'https://plugins.gradle.org/m2' }
    google()
  }
  dependencies {
    classpath 'com.android.tools.build:gradle:3.1.0'
    classpath 'org.junit.platform:junit-platform-gradle-plugin:1.1.0'
  }
}

subprojects {
  if (!subprojects.isEmpty()) { return }
  group = 'chat.viska'
  version = file("${rootDir}/VERSION").text
  configurations {
    checkerFrameworkCheckerJar
    checkerFrameworkAnnotatedJDK
    all {
      resolutionStrategy {
        preferProjectModules()
      }
    }
  }
  repositories {
    mavenLocal()
    jcenter()
    google()
  }
}

project(':java').subprojects {
  apply from: "${rootDir}/gradle/java.gradle"
}

project(':android').subprojects {
  apply from: "${rootDir}/gradle/android.gradle"
}

task javadocAll(type: Javadoc) {
  def outputDir = file("${buildDir}/javadocAll")
  def overviewPath = 'doc/javadoc-overview.html'
  group = 'documentation'
  description = 'Generates Javadoc for the whole project.'
  outputs.dir outputDir
  outputs.files "${outputDir}/**/*"
  inputs.files overviewPath
  options {
    links(
        'https://docs.oracle.com/javase/10/docs/api',
        'https://developer.android.com/reference',
        'http://reactivex.io/RxJava/2.x/javadoc',
        'https://checkerframework.org/api',
        'https://static.javadoc.io/com.google.code.findbugs/jsr305/3.0.2'
    )
    overview = overviewPath
  }
  source(project(':java').subprojects.collect {
    it.sourceSets.main.allJava
  })
  /*
  source(project(':android').subprojects.collect {
    it.android.sourceSets.getByName('java').sourceFiles
  })
  */
  classpath += files(project(':java').subprojects.collect { pr ->
    pr.sourceSets.main.compileClasspath
  })
  destinationDir = outputDir
  title = "API Reference for Viska XMPP framework $version"
}

task clean {
  group = 'build'
  doLast {
    delete buildDir
  }
}

defaultTasks "assemble", "javadocAll"