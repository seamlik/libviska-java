/*
 * Copyright 2017-2018 Kai-Chung Yan (殷啟聰)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'checkstyle'
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'pmd'

checkstyle {
  toolVersion = '8.8'
  File styleFile = file("${rootProject.buildDir}/config.xml")
  if (!styleFile.exists()) {
    mkdir styleFile.parent
    styleFile.createNewFile()
    styleFile.write(new URL(
        "https://raw.githubusercontent.com/checkstyle/checkstyle/checkstyle-${toolVersion}/src/main/resources/google_checks.xml"
    ).text)
  }
  config = resources.text.fromFile(styleFile)
}

pmd {
  toolVersion = '6.1.0'
  ruleSets = [
      'category/java/bestpractices.xml',
      'category/java/codestyle.xml',
      'category/java/design.xml',
      'category/java/documentation.xml',
      'category/java/errorprone.xml',
      'category/java/multithreading.xml',
      'category/java/performance.xml'
  ]
}

rootProject.ext {
  checkerFrameworkProcessors = [
      'org.checkerframework.checker.formatter.FormatterChecker',
      'org.checkerframework.checker.interning.InterningChecker',
      'org.checkerframework.checker.nullness.NullnessChecker',
      'org.checkerframework.checker.optional.OptionalChecker',
      'org.checkerframework.checker.regex.RegexChecker',
      'org.checkerframework.checker.signature.SignatureChecker',
      'org.checkerframework.common.aliasing.AliasingChecker',
      'org.checkerframework.common.value.ValueChecker'
  ]
  checkerFrameworkSkipUses = [
      '^org\\.apache\\.commons\\.lang3\\.',
      'io\\.reactivex\\.'
  ]
}